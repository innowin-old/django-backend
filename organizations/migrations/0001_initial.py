# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-12-18 07:17
from __future__ import unicode_literals

import danesh_boom.models.fields
from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('base', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('media', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Ability',
            fields=[
                ('base_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='base.Base')),
                ('title', models.CharField(max_length=50)),
                ('text', models.TextField()),
            ],
            bases=('base.base',),
        ),
        migrations.CreateModel(
            name='Confirmation',
            fields=[
                ('base_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='base.Base')),
                ('title', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('link', models.CharField(max_length=200)),
                ('confirm_flag', models.BooleanField(default=False)),
            ],
            bases=('base.base',),
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('base_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='base.Base')),
                ('title', models.CharField(max_length=100)),
            ],
            bases=('base.base',),
        ),
        migrations.CreateModel(
            name='Follow',
            fields=[
                ('base_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='base.Base')),
            ],
            bases=('base.base',),
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('base_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='base.Base')),
                ('username', models.CharField(max_length=100, unique=True)),
                ('nike_name', models.CharField(blank=True, max_length=100, null=True)),
                ('official_name', models.CharField(max_length=75)),
                ('national_code', models.CharField(max_length=20)),
                ('registration_ads_url', models.URLField(blank=True, null=True)),
                ('registrar_organization', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(max_length=50)),
                ('province', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=50)),
                ('address', models.TextField(blank=True)),
                ('phone', django.contrib.postgres.fields.ArrayField(base_field=danesh_boom.models.fields.PhoneField(max_length=23), blank=True, default=[], size=None)),
                ('web_site', models.URLField(blank=True, null=True)),
                ('established_year', models.IntegerField(blank=True, null=True)),
                ('ownership_type', models.CharField(choices=[('idi', 'موسسه انفرادی'), ('org', 'شرکت'), ('cop', 'تعاونی'), ('pvt', 'سهامی خاص'), ('llp', 'سهامی عام'), ('gco', 'شرکت دولتی'), ('oth', 'سایر')], max_length=20)),
                ('business_type', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('producer', 'تولید کننده'), ('investor', 'سرمایه گذار'), ('service provider', 'ارائه دهنده خدمات')], max_length=30), size=None)),
                ('biography', models.TextField(blank=True, max_length=256)),
                ('description', models.TextField(blank=True)),
                ('correspondence_language', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), blank=True, default=[], size=None)),
                ('social_network', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, default=[], size=None)),
                ('staff_count', models.IntegerField(blank=True, null=True)),
                ('admins', models.ManyToManyField(blank=True, related_name='organization_admins', to=settings.AUTH_USER_MODEL)),
                ('organization_logo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='media.Media')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organizations', to=settings.AUTH_USER_MODEL)),
            ],
            bases=('base.base',),
        ),
        migrations.CreateModel(
            name='OrganizationPicture',
            fields=[
                ('base_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='base.Base')),
                ('order', models.IntegerField(default=0)),
                ('description', models.TextField(blank=True)),
                ('picture_media', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organization_picture_media', to='media.Media')),
                ('picture_organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organization_pictures', to='organizations.Organization')),
            ],
            bases=('base.base',),
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('base_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='base.Base')),
                ('title', models.CharField(max_length=100)),
                ('text', models.TextField()),
                ('type', models.CharField(choices=[('post', 'پست'), ('offer', 'تقاضا'), ('request', 'عرضه')], max_length=10)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('post_organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='organizations.Organization')),
                ('post_picture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='media.Media')),
                ('post_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_posts', to=settings.AUTH_USER_MODEL)),
            ],
            bases=('base.base',),
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('base_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='base.Base')),
                ('position', models.CharField(max_length=50)),
                ('post_permission', models.BooleanField(default=False)),
                ('staff_organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='staffs', to='organizations.Organization')),
                ('staff_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to=settings.AUTH_USER_MODEL)),
            ],
            bases=('base.base',),
        ),
        migrations.CreateModel(
            name='StaffCount',
            fields=[
                ('base_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='base.Base')),
                ('count', models.IntegerField()),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('staff_count_organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='staff_counts', to='organizations.Organization')),
            ],
            bases=('base.base',),
        ),
    ]
