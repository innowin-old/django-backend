# -*- coding: utf-8 -*-
# Generated by Django 1.10.7 on 2017-12-30 11:46
from __future__ import unicode_literals

import danesh_boom.models.fields
from django.conf import settings
import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('media', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('organizations', '0001_initial'),
        ('base', '0002_basecomment_comment_picture'),
    ]

    operations = [
        migrations.CreateModel(
            name='Badge',
            fields=[
                ('base_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='base.Base')),
                ('title', models.CharField(help_text='String(100)', max_length=100)),
                ('badge_user', models.ForeignKey(help_text='Integer', on_delete=django.db.models.deletion.CASCADE, related_name='badges', to=settings.AUTH_USER_MODEL)),
            ],
            bases=('base.base',),
        ),
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('base_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='base.Base')),
                ('title', models.CharField(help_text='String(250)', max_length=250)),
                ('certificate_user', models.ForeignKey(help_text='Integer', on_delete=django.db.models.deletion.CASCADE, related_name='certificates', to=settings.AUTH_USER_MODEL)),
                ('picture_media', models.ForeignKey(blank=True, help_text='Integer', null=True, on_delete=django.db.models.deletion.SET_NULL, to='media.Media')),
            ],
            bases=('base.base',),
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('base_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='base.Base')),
                ('grade', models.CharField(help_text='String(100)', max_length=100)),
                ('university', models.CharField(help_text='String(100)', max_length=100)),
                ('field_of_study', models.CharField(help_text='String(100)', max_length=100)),
                ('from_date', models.CharField(blank=True, help_text='String(7)', max_length=7, null=True)),
                ('to_date', models.CharField(blank=True, help_text='String(7)', max_length=7, null=True)),
                ('average', models.FloatField(blank=True, help_text='Float', null=True, validators=[django.core.validators.MaxValueValidator(20), django.core.validators.MinValueValidator(0)])),
                ('description', models.TextField(blank=True, help_text='Text')),
                ('education_user', models.ForeignKey(help_text='Integer', on_delete=django.db.models.deletion.CASCADE, related_name='educations', to=settings.AUTH_USER_MODEL)),
            ],
            bases=('base.base',),
        ),
        migrations.CreateModel(
            name='Identity',
            fields=[
                ('base_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='base.Base')),
                ('name', models.CharField(help_text='String(150)', max_length=150, unique=True)),
                ('identity_organization', models.OneToOneField(blank=True, help_text='Integer', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='identity', to='organizations.Organization')),
                ('identity_user', models.OneToOneField(blank=True, help_text='Integer', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='identity', to=settings.AUTH_USER_MODEL)),
            ],
            bases=('base.base',),
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('base_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='base.Base')),
                ('public_email', models.EmailField(blank=True, help_text='Email', max_length=254, null=True)),
                ('national_code', models.CharField(blank=True, help_text='String(20)', max_length=20, validators=[django.core.validators.RegexValidator('^\\d{10}$')])),
                ('birth_date', models.CharField(blank=True, help_text='String(10)', max_length=10, null=True)),
                ('web_site', django.contrib.postgres.fields.ArrayField(base_field=models.URLField(), blank=True, default=[], help_text='Array', size=None)),
                ('phone', django.contrib.postgres.fields.ArrayField(base_field=danesh_boom.models.fields.PhoneField(max_length=23), blank=True, default=[], help_text='Array', size=None)),
                ('mobile', django.contrib.postgres.fields.ArrayField(base_field=danesh_boom.models.fields.PhoneField(max_length=23), blank=True, default=[], help_text='Array', size=None)),
                ('fax', danesh_boom.models.fields.PhoneField(blank=True, help_text='Phone', max_length=23)),
                ('telegram_account', models.CharField(blank=True, help_text='String(256)', max_length=256, validators=[django.core.validators.RegexValidator('^@[\\w\\d_]+$')])),
                ('description', models.TextField(blank=True, help_text='Text')),
                ('profile_user', models.OneToOneField(help_text='Integer', on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            bases=('base.base',),
        ),
        migrations.CreateModel(
            name='Research',
            fields=[
                ('base_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='base.Base')),
                ('title', models.CharField(help_text='String(250)', max_length=250)),
                ('url', models.URLField(blank=True, help_text='URL')),
                ('author', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, help_text='Array(String(100))', size=None)),
                ('publication', models.CharField(blank=True, help_text='String(100)', max_length=100)),
                ('year', models.IntegerField(blank=True, help_text='Integer', null=True)),
                ('page_count', models.IntegerField(blank=True, help_text='Integer', null=True)),
                ('research_user', models.ForeignKey(help_text='Integer', on_delete=django.db.models.deletion.CASCADE, related_name='researches', to=settings.AUTH_USER_MODEL)),
            ],
            bases=('base.base',),
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('base_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='base.Base')),
                ('title', models.CharField(help_text='String(250)', max_length=250)),
                ('tag', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), blank=True, help_text='50', size=None)),
                ('description', models.TextField(blank=True, help_text='Text')),
                ('skill_user', models.ForeignKey(help_text='Integer', on_delete=django.db.models.deletion.CASCADE, related_name='skills', to=settings.AUTH_USER_MODEL)),
            ],
            bases=('base.base',),
        ),
        migrations.CreateModel(
            name='WorkExperience',
            fields=[
                ('base_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='base.Base')),
                ('name', models.CharField(blank=True, help_text='String(100)', max_length=100)),
                ('position', models.CharField(blank=True, help_text='String(100)', max_length=100)),
                ('from_date', models.CharField(blank=True, help_text='String(100)', max_length=7, null=True)),
                ('to_date', models.CharField(blank=True, help_text='String(7)', max_length=7, null=True)),
                ('status', models.CharField(choices=[('WITHOUT_CONFIRM', 'بدون تایید'), ('WAIT_FOR_CONFIRM', 'منتظر تایید'), ('CONFIRMED', 'تایید شده'), ('UNCONFIRMED', 'تایید نشده')], default='WITHOUT_CONFIRM', help_text='WITHOUT_CONFIRM | WAIT_FOR_CONFIRM | CONFIRMED | UNCONFIRMED', max_length=20)),
                ('work_experience_organization', models.ForeignKey(blank=True, help_text='Integer', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='work_experience_organization', to='organizations.Organization')),
                ('work_experience_user', models.ForeignKey(help_text='Integer', on_delete=django.db.models.deletion.CASCADE, related_name='work_experiences', to=settings.AUTH_USER_MODEL)),
            ],
            bases=('base.base',),
        ),
        migrations.AlterUniqueTogether(
            name='badge',
            unique_together=set([('badge_user', 'title')]),
        ),
    ]
